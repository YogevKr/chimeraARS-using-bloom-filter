    sum(!)
        ^
SyntaxError: invalid syntax


In [2]: sum(1)
---------------------------------------------------------------------------
TypeError                                 Traceback (most recent call last)
<ipython-input-2-f6bbc74f40f4> in <module>
----> 1 sum(1)

TypeError: 'int' object is not iterable

In [3]: sum([1,])
Out[3]: 1

In [4]: c = 2

In [5]: sum([c*4**w for w in range(1,n+1)])
---------------------------------------------------------------------------
NameError                                 Traceback (most recent call last)
<ipython-input-5-4f1955262a15> in <module>
----> 1 sum([c*4**w for w in range(1,n+1)])

NameError: name 'n' is not defined

In [6]: n = 100

In [7]: sum([c*4**w for w in range(1,n+1)])
Out[7]: 4285168118023974068111898912909766940059207983420780894137000

In [8]: 2n + n(n-1)/2
  File "<ipython-input-8-3f0ff3eaa4e7>", line 1
    2n + n(n-1)/2
     ^
SyntaxError: invalid syntax


In [9]: 2*n + n*(n-1)/2
Out[9]: 5150.0

In [10]: n=1_000_000

In [11]: 2*n + n*(n-1)/2
Out[11]: 500001500000.0

In [12]: n=4_700_000

In [13]: 2*n + n*(n-1)/2
Out[13]: 11045007050000.0

In [14]: n=4_700_000

In [15]:

In [15]: n=1_000_000

In [16]: n*(n-1)/2
Out[16]: 499999500000.0

In [17]: 2n
  File "<ipython-input-17-e6047c4d60ea>", line 1
    2n
     ^
SyntaxError: invalid syntax


In [18]: 2*n
Out[18]: 2000000

In [19]: exit

~ 21m 25s
❯ cd sandbox

~/sandbox
❯ mkdir bloom_filter_chimeraARS

~/sandbox
❯ cd bloom_filter_chimeraARS

~/sandbox/bloom_filter_chimeraARS
❯ pyenv local 3.7.2

~/sandbox/bloom_filter_chimeraARS
❯ pipenv shell
Warning: the environment variable LANG is not set!
We recommend setting this in ~/.profile (or equivalent) for proper expected behavior.
Creating a virtualenv for this project…
Pipfile: /Users/yogev/sandbox/bloom_filter_chimeraARS/Pipfile
Using /Users/yogev/.pyenv/versions/3.7.2/bin/python3.7 (3.7.2) to create virtualenv…
⠋ Creating virtual environment...Already using interpreter /Users/yogev/.pyenv/versions/3.7.2/bin/python3.7
Using base prefix '/Users/yogev/.pyenv/versions/3.7.2'
New python executable in /Users/yogev/.local/share/virtualenvs/bloom_filter_chimeraARS-vNsdYzSe/bin/python3.7
Also creating executable in /Users/yogev/.local/share/virtualenvs/bloom_filter_chimeraARS-vNsdYzSe/bin/python
Installing setuptools, pip, wheel...
done.

✔ Successfully created virtual environment!
Virtualenv location: /Users/yogev/.local/share/virtualenvs/bloom_filter_chimeraARS-vNsdYzSe
Creating a Pipfile for this project…
Launching subshell in virtual environment…
 . /Users/yogev/.local/share/virtualenvs/bloom_filter_chimeraARS-vNsdYzSe/bin/activate

~/sandbox/bloom_filter_chimeraARS
❯  . /Users/yogev/.local/share/virtualenvs/bloom_filter_chimeraARS-vNsdYzSe/bin/activate

~/sandbox/bloom_filter_chimeraARS
bloom_filter_chimeraARS-vNsdYzSe ❯ pip install biopython
Collecting biopython
  Downloading biopython-1.76-cp37-cp37m-macosx_10_6_intel.whl (2.4 MB)
     |████████████████████████████████| 2.4 MB 1.3 MB/s
Collecting numpy
  Downloading numpy-1.18.2-cp37-cp37m-macosx_10_9_x86_64.whl (15.1 MB)
     |████████████████████████████████| 15.1 MB 359 kB/s
Installing collected packages: numpy, biopython
Successfully installed biopython-1.76 numpy-1.18.2

~/sandbox/bloom_filter_chimeraARS 49s
bloom_filter_chimeraARS-vNsdYzSe ❯ from Bio import SeqIO
for record in SeqIO.parse("example.fasta", "fasta"):
    print(record.id)^_

~/sandbox/bloom_filter_chimeraARS
bloom_filter_chimeraARS-vNsdYzSe ❯

~/sandbox/bloom_filter_chimeraARS
bloom_filter_chimeraARS-vNsdYzSe ❯

~/sandbox/bloom_filter_chimeraARS
bloom_filter_chimeraARS-vNsdYzSe ❯

~/sandbox/bloom_filter_chimeraARS
bloom_filter_chimeraARS-vNsdYzSe ❯ python
Python 3.7.2 (default, Apr 22 2019, 10:37:59)
[Clang 10.0.1 (clang-1001.0.46.4)] on darwin
Type "help", "copyright", "credits" or "license" for more information.
>>> exit()

~/sandbox/bloom_filter_chimeraARS
bloom_filter_chimeraARS-vNsdYzSe ❯ ipython
/Users/yogev/.pyenv/versions/3.7.2/lib/python3.7/site-packages/IPython/core/interactiveshell.py:925: UserWarning: Attempting to work in a virtualenv. If you encounter problems, please install IPython inside the virtualenv.
  warn("Attempting to work in a virtualenv. If you encounter problems, please "
Python 3.7.2 (default, Apr 22 2019, 10:37:59)
Type 'copyright', 'credits' or 'license' for more information
IPython 7.4.0 -- An enhanced Interactive Python. Type '?' for help.

In [1]: from Bio import SeqIO
   ...: for record in SeqIO.parse("/Users/yogev/Downloads/GCF_000005845.2_ASM584v2_genomic.fna", "fasta"):
   ...:     print(record.id)
   ...:
NC_000913.3

In [2]: from Bio import SeqIO
   ...: for record in SeqIO.parse("/Users/yogev/Downloads/GCF_000005845.2_ASM584v2_genomic.fna", "fasta"):
   ...:     r = record
   ...:
   ...:

In [3]: r
Out[3]: SeqRecord(seq=Seq('AGCTTTTCATTCTGACTGCAACGGGCAATATGTCTCTGTGTGGATTAAAAAAAG...TTC', SingleLetterAlphabet()), id='NC_000913.3', name='NC_000913.3', description='NC_000913.3 Escherichia coli str. K-12 substr. MG1655, complete genome', dbxrefs=[])

In [4]: r.seq
Out[4]: Seq('AGCTTTTCATTCTGACTGCAACGGGCAATATGTCTCTGTGTGGATTAAAAAAAG...TTC', SingleLetterAlphabet())

In [5]: size(r.seq)
---------------------------------------------------------------------------
NameError                                 Traceback (most recent call last)
<ipython-input-5-4b0e9718d585> in <module>
----> 1 size(r.seq)

NameError: name 'size' is not defined

In [6]: r
Out[6]: SeqRecord(seq=Seq('AGCTTTTCATTCTGACTGCAACGGGCAATATGTCTCTGTGTGGATTAAAAAAAG...TTC', SingleLetterAlphabet()), id='NC_000913.3', name='NC_000913.3', description='NC_000913.3 Escherichia coli str. K-12 substr. MG1655, complete genome', dbxrefs=[])

In [7]: r.seq.__dir__
Out[7]: <function Seq.__dir__()>

In [8]: r.seq.__dir__()
Out[8]:
['_data',
 'alphabet',
 '__module__',
 '__doc__',
 '__init__',
 '__repr__',
 '__str__',
 '__hash__',
 '__eq__',
 '__ne__',
 '__lt__',
 '__le__',
 '__gt__',
 '__ge__',
 '__len__',
 '__getitem__',
 '__add__',
 '__radd__',
 '__mul__',
 '__rmul__',
 '__imul__',
 'tomutable',
 '_get_seq_str_and_check_alphabet',
 'count',
 'count_overlap',
 '__contains__',
 'find',
 'rfind',
 'index',
 'rindex',
 'startswith',
 'endswith',
 'split',
 'rsplit',
 'strip',
 'lstrip',
 'rstrip',
 'upper',
 'lower',
 'encode',
 'complement',
 'reverse_complement',
 'transcribe',
 'back_transcribe',
 'translate',
 'ungap',
 'join',
 '__dict__',
 '__weakref__',
 '__getattribute__',
 '__setattr__',
 '__delattr__',
 '__new__',
 '__reduce_ex__',
 '__reduce__',
 '__subclasshook__',
 '__init_subclass__',
 '__format__',
 '__sizeof__',
 '__dir__',
 '__class__']

In [9]: r.seq.count()
---------------------------------------------------------------------------
TypeError                                 Traceback (most recent call last)
<ipython-input-9-e3183d902d8f> in <module>
----> 1 r.seq.count()

TypeError: count() missing 1 required positional argument: 'sub'

In [10]: r.seq.count
Out[10]: <bound method Seq.count of Seq('AGCTTTTCATTCTGACTGCAACGGGCAATATGTCTCTGTGTGGATTAAAAAAAG...TTC', SingleLetterAlphabet())>

In [11]: r.seq.count()
---------------------------------------------------------------------------
TypeError                                 Traceback (most recent call last)
<ipython-input-11-e3183d902d8f> in <module>
----> 1 r.seq.count()

TypeError: count() missing 1 required positional argument: 'sub'

In [12]: count(r.seq)
---------------------------------------------------------------------------
NameError                                 Traceback (most recent call last)
<ipython-input-12-fae8368323ee> in <module>
----> 1 count(r.seq)

NameError: name 'count' is not defined

In [13]: r.seq.lower
Out[13]: <bound method Seq.lower of Seq('AGCTTTTCATTCTGACTGCAACGGGCAATATGTCTCTGTGTGGATTAAAAAAAG...TTC', SingleLetterAlphabet())>

In [14]: r.seq.lower()
Out[14]: Seq('agcttttcattctgactgcaacgggcaatatgtctctgtgtggattaaaaaaag...ttc', SingleLetterAlphabet())

In [15]: !pip install bloom-filter
Collecting bloom-filter
  Downloading https://files.pythonhosted.org/packages/6f/85/c26819421801c5a04a2743e329641dde22225a55153d5477c032b4f7d40e/bloom_filter-1.3-py3-none-any.whl
Installing collected packages: bloom-filter
Successfully installed bloom-filter-1.3

In [16]: from bloom_filter import BloomFilter

In [17]: 'bloom' = BloomFilter()

In [18]: bloom.add(r.seq)

In [19]: bloom.__dir__()
Out[19]:
['error_rate_p',
 'ideal_num_elements_n',
 'num_bits_m',
 'backend',
 'num_probes_k',
 'probe_bitnoer',
 '__module__',
 '__doc__',
 '__init__',
 '__repr__',
 'add',
 '__iadd__',
 '_match_template',
 'union',
 '__ior__',
 'intersection',
 '__iand__',
 '__contains__',
 '__dict__',
 '__weakref__',
 '__hash__',
 '__str__',
 '__getattribute__',
 '__setattr__',
 '__delattr__',
 '__lt__',
 '__le__',
 '__eq__',
 '__ne__',
 '__gt__',
 '__ge__',
 '__new__',
 '__reduce_ex__',
 '__reduce__',
 '__subclasshook__',
 '__init_subclass__',
 '__format__',
 '__sizeof__',
 '__dir__',
 '__class__']

In [20]: bloom.error_rate_p
Out[20]: 0.1

In [21]: bloom.num_bits_m
Out[21]: 47926

In [22]: bloom.max_elements
---------------------------------------------------------------------------
AttributeError                            Traceback (most recent call last)
<ipython-input-22-b11698501512> in <module>
----> 1 bloom.max_elements

AttributeError: 'BloomFilter' object has no attribute 'max_elements'

In [23]: bloom.ideal_num_elements_n
Out[23]: 10000

In [24]: r.seq
Out[24]: Seq('AGCTTTTCATTCTGACTGCAACGGGCAATATGTCTCTGTGTGGATTAAAAAAAG...TTC', SingleLetterAlphabet())

In [25]: r.seq[8]
Out[25]: 'A'

In [26]: r.seq.len()
---------------------------------------------------------------------------
AttributeError                            Traceback (most recent call last)
<ipython-input-26-7fc84cb7a6ee> in <module>
----> 1 r.seq.len()

AttributeError: 'Seq' object has no attribute 'len'

In [27]: len(r.seq)
Out[27]: 4641652

In [28]: def distinctSubstring(str):
    ...:     # Put all distinct substring in a HashSet
    ...:     result = set()
    ...:
    ...:     # List All Substrings
    ...:     for i in range(len(str)+1):
    ...:         for j in range( i + 1, len(str)+1):
    ...:
    ...:             # Add each substring in Set
    ...:             result.add(str[i:j]);
    ...:         # Return size of the HashSet
    ...:     return len(result);
    ...:

In [29]: str
Out[29]: str

In [30]: def distinctSubstring(s):
    ...:     # Put all distinct substring in a HashSet
    ...:     result = set()
    ...:
    ...:     # List All Substrings
    ...:     for i in range(len(s)+1):
    ...:         for j in range( i + 1, len(s)+1):
    ...:
    ...:             # Add each substring in Set
    ...:             result.add(s[i:j]);
    ...:         # Return size of the HashSet
    ...:     return len(result);
    ...:

In [31]: distinctSubstring(r.seq)
/Users/yogev/.local/share/virtualenvs/bloom_filter_chimeraARS-vNsdYzSe/lib/python3.7/site-packages/Bio/Seq.py:182: BiopythonWarning: Biopython Seq objects now use string comparison. Older versions of Biopython used object comparison. During this transition, please use hash(id(my_seq)) or my_dict[id(my_seq)] if you want the old behaviour, or use hash(str(my_seq)) or my_dict[str(my_seq)] for the new string hashing behaviour.
  BiopythonWarning,


^C---------------------------------------------------------------------------
KeyboardInterrupt                         Traceback (most recent call last)
<ipython-input-31-112b70689fab> in <module>
----> 1 distinctSubstring(r.seq)

<ipython-input-30-cf3b65702e6e> in distinctSubstring(s)
      8
      9             # Add each substring in Set
---> 10             result.add(s[i:j]);
     11         # Return size of the HashSet
     12     return len(result);

~/.local/share/virtualenvs/bloom_filter_chimeraARS-vNsdYzSe/lib/python3.7/site-packages/Bio/Seq.py in __getitem__(self, index)
    324         else:
    325             # Return the (sub)sequence as another Seq object
--> 326             return Seq(self._data[index], self.alphabet)
    327
    328     def __add__(self, other):

KeyboardInterrupt:

In [32]: from tqdm import tqdm
---------------------------------------------------------------------------
ModuleNotFoundError                       Traceback (most recent call last)
<ipython-input-32-decf43e5741c> in <module>
----> 1 from tqdm import tqdm

ModuleNotFoundError: No module named 'tqdm'

In [33]: !pip install tqdm
Collecting tqdm
  Using cached https://files.pythonhosted.org/packages/47/55/fd9170ba08a1a64a18a7f8a18f088037316f2a41be04d2fe6ece5a653e8f/tqdm-4.43.0-py2.py3-none-any.whl
Installing collected packages: tqdm
Successfully installed tqdm-4.43.0

In [34]: def distinctSubstring(s):
    ...:     # Put all distinct substring in a HashSet
    ...:     result = set()
    ...:
    ...:     # List All Substrings
    ...:     for i in tqdm(range(len(s)+1)):
    ...:         for j in tqdm(range( i + 1, len(s)+1)):
    ...:
    ...:             # Add each substring in Set
    ...:             result.add(s[i:j]);
    ...:         # Return size of the HashSet
    ...:     return len(result);
    ...:

In [35]: def distinctSubstring(s):
    ...:     # Put all distinct substring in a HashSet
    ...:     result = set()
    ...:
    ...:     # List All Substrings
    ...:     for i in tqdm(range(len(s)+1)):
    ...:         for j in tqdm(range( i + 1, len(s)+1)):
    ...:
    ...:             # Add each substring in Set
    ...:             result.add(s[i:j]);
    ...:         # Return size of the HashSet
    ...:     return len(result);
    ...:

In [36]: distinctSubstring(r.seq)
---------------------------------------------------------------------------
NameError                                 Traceback (most recent call last)
<ipython-input-36-112b70689fab> in <module>
----> 1 distinctSubstring(r.seq)

<ipython-input-35-5e69c248796a> in distinctSubstring(s)
      4
      5     # List All Substrings
----> 6     for i in tqdm(range(len(s)+1)):
      7         for j in tqdm(range( i + 1, len(s)+1)):
      8

NameError: name 'tqdm' is not defined

In [37]: from tqdm import tqdm

In [38]: distinctSubstring(r.seq)
  0%|                                                                                                              | 0/4641653 [00:00<?, ?it/s/Users/yogev/.local/share/virtualenvs/bloom_filter_chimeraARS-vNsdYzSe/lib/python3.7/site-packages/Bio/Seq.py:182: BiopythonWarning: Biopython Seq objects now use string comparison. Older versions of Biopython used object comparison. During this transition, please use hash(id(my_seq)) or my_dict[id(my_seq)] if you want the old behaviour, or use hash(str(my_seq)) or my_dict[str(my_seq)] for the new string hashing behaviour.
  BiopythonWarning,
                                                                                                                                              ^C^CERROR:root:Internal Python error in the inspect module.                                         | 167509/4641652 [00:40<7:07:16, 174.53it/s]
Below is the traceback from this internal error.

Traceback (most recent call last):
  File "/Users/yogev/.pyenv/versions/3.7.2/lib/python3.7/site-packages/IPython/core/interactiveshell.py", line 3296, in run_code
    exec(code_obj, self.user_global_ns, self.user_ns)
  File "<ipython-input-38-112b70689fab>", line 1, in <module>
    distinctSubstring(r.seq)
  File "<ipython-input-35-5e69c248796a>", line 10, in distinctSubstring
    result.add(s[i:j]);
  File "/Users/yogev/.local/share/virtualenvs/bloom_filter_chimeraARS-vNsdYzSe/lib/python3.7/site-packages/Bio/Seq.py", line 326, in __getitem__
    return Seq(self._data[index], self.alphabet)
  File "/Users/yogev/.local/share/virtualenvs/bloom_filter_chimeraARS-vNsdYzSe/lib/python3.7/site-packages/Bio/Seq.py", line 98, in __init__
    def __init__(self, data, alphabet=Alphabet.generic_alphabet):
KeyboardInterrupt

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/yogev/.pyenv/versions/3.7.2/lib/python3.7/site-packages/IPython/core/interactiveshell.py", line 2033, in showtraceback
    stb = value._render_traceback_()
AttributeError: 'KeyboardInterrupt' object has no attribute '_render_traceback_'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/yogev/.pyenv/versions/3.7.2/lib/python3.7/genericpath.py", line 19, in exists
    os.stat(path)
FileNotFoundError: [Errno 2] No such file or directory: '<ipython-input-38-112b70689fab>'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/yogev/.pyenv/versions/3.7.2/lib/python3.7/site-packages/IPython/core/ultratb.py", line 1095, in get_records
    return _fixed_getinnerframes(etb, number_of_lines_of_context, tb_offset)
  File "/Users/yogev/.pyenv/versions/3.7.2/lib/python3.7/site-packages/IPython/core/ultratb.py", line 313, in wrapped
    return f(*args, **kwargs)
  File "/Users/yogev/.pyenv/versions/3.7.2/lib/python3.7/site-packages/IPython/core/ultratb.py", line 347, in _fixed_getinnerframes
    records = fix_frame_records_filenames(inspect.getinnerframes(etb, context))
  File "/Users/yogev/.pyenv/versions/3.7.2/lib/python3.7/inspect.py", line 1502, in getinnerframes
    frameinfo = (tb.tb_frame,) + getframeinfo(tb, context)
  File "/Users/yogev/.pyenv/versions/3.7.2/lib/python3.7/inspect.py", line 1460, in getframeinfo
    filename = getsourcefile(frame) or getfile(frame)
  File "/Users/yogev/.pyenv/versions/3.7.2/lib/python3.7/inspect.py", line 693, in getsourcefile
    if os.path.exists(filename):
  File "/Users/yogev/.pyenv/versions/3.7.2/lib/python3.7/genericpath.py", line 19, in exists
    os.stat(path)
KeyboardInterrupt
---------------------------------------------------------------------------

In [39]:                                                                                                                         In [39]: dsf
---------------------------------------------------------------------------
NameError                                 Traceback (most recent call last)
<ipython-input-39-6842d813946e> in <module>
----> 1 dsf

NameError: name 'dsf' is not defined

In [40]:

In [40]:

In [40]:

In [40]:

In [40]: bloom = BloomFilter()

In [41]: from itertools import islice
    ...:
    ...: def window(seq, n=2):
    ...:     "Returns a sliding window (of width n) over data from the iterable"
    ...:     "   s -> (s0,s1,...s[n-1]), (s1,s2,...,sn), ...                   "
    ...:     it = iter(seq)
    ...:     result = tuple(islice(it, n))
    ...:     if len(result) == n:
    ...:         yield result
    ...:     for elem in it:
    ...:         result = result[1:] + (elem,)
    ...:         yield result
    ...:

In [42]: for s in window(r.seq[:100], n=10):
    ...:     print(s)
    ...:
('A', 'G', 'C', 'T', 'T', 'T', 'T', 'C', 'A', 'T')
('G', 'C', 'T', 'T', 'T', 'T', 'C', 'A', 'T', 'T')
('C', 'T', 'T', 'T', 'T', 'C', 'A', 'T', 'T', 'C')
('T', 'T', 'T', 'T', 'C', 'A', 'T', 'T', 'C', 'T')
('T', 'T', 'T', 'C', 'A', 'T', 'T', 'C', 'T', 'G')
('T', 'T', 'C', 'A', 'T', 'T', 'C', 'T', 'G', 'A')
('T', 'C', 'A', 'T', 'T', 'C', 'T', 'G', 'A', 'C')
('C', 'A', 'T', 'T', 'C', 'T', 'G', 'A', 'C', 'T')
('A', 'T', 'T', 'C', 'T', 'G', 'A', 'C', 'T', 'G')
('T', 'T', 'C', 'T', 'G', 'A', 'C', 'T', 'G', 'C')
('T', 'C', 'T', 'G', 'A', 'C', 'T', 'G', 'C', 'A')
('C', 'T', 'G', 'A', 'C', 'T', 'G', 'C', 'A', 'A')
('T', 'G', 'A', 'C', 'T', 'G', 'C', 'A', 'A', 'C')
('G', 'A', 'C', 'T', 'G', 'C', 'A', 'A', 'C', 'G')
('A', 'C', 'T', 'G', 'C', 'A', 'A', 'C', 'G', 'G')
('C', 'T', 'G', 'C', 'A', 'A', 'C', 'G', 'G', 'G')
('T', 'G', 'C', 'A', 'A', 'C', 'G', 'G', 'G', 'C')
('G', 'C', 'A', 'A', 'C', 'G', 'G', 'G', 'C', 'A')
('C', 'A', 'A', 'C', 'G', 'G', 'G', 'C', 'A', 'A')
('A', 'A', 'C', 'G', 'G', 'G', 'C', 'A', 'A', 'T')
('A', 'C', 'G', 'G', 'G', 'C', 'A', 'A', 'T', 'A')
('C', 'G', 'G', 'G', 'C', 'A', 'A', 'T', 'A', 'T')
('G', 'G', 'G', 'C', 'A', 'A', 'T', 'A', 'T', 'G')
('G', 'G', 'C', 'A', 'A', 'T', 'A', 'T', 'G', 'T')
('G', 'C', 'A', 'A', 'T', 'A', 'T', 'G', 'T', 'C')
('C', 'A', 'A', 'T', 'A', 'T', 'G', 'T', 'C', 'T')
('A', 'A', 'T', 'A', 'T', 'G', 'T', 'C', 'T', 'C')
('A', 'T', 'A', 'T', 'G', 'T', 'C', 'T', 'C', 'T')
('T', 'A', 'T', 'G', 'T', 'C', 'T', 'C', 'T', 'G')
('A', 'T', 'G', 'T', 'C', 'T', 'C', 'T', 'G', 'T')
('T', 'G', 'T', 'C', 'T', 'C', 'T', 'G', 'T', 'G')
('G', 'T', 'C', 'T', 'C', 'T', 'G', 'T', 'G', 'T')
('T', 'C', 'T', 'C', 'T', 'G', 'T', 'G', 'T', 'G')
('C', 'T', 'C', 'T', 'G', 'T', 'G', 'T', 'G', 'G')
('T', 'C', 'T', 'G', 'T', 'G', 'T', 'G', 'G', 'A')
('C', 'T', 'G', 'T', 'G', 'T', 'G', 'G', 'A', 'T')
('T', 'G', 'T', 'G', 'T', 'G', 'G', 'A', 'T', 'T')
('G', 'T', 'G', 'T', 'G', 'G', 'A', 'T', 'T', 'A')
('T', 'G', 'T', 'G', 'G', 'A', 'T', 'T', 'A', 'A')
('G', 'T', 'G', 'G', 'A', 'T', 'T', 'A', 'A', 'A')
('T', 'G', 'G', 'A', 'T', 'T', 'A', 'A', 'A', 'A')
('G', 'G', 'A', 'T', 'T', 'A', 'A', 'A', 'A', 'A')
('G', 'A', 'T', 'T', 'A', 'A', 'A', 'A', 'A', 'A')
('A', 'T', 'T', 'A', 'A', 'A', 'A', 'A', 'A', 'A')
('T', 'T', 'A', 'A', 'A', 'A', 'A', 'A', 'A', 'G')
('T', 'A', 'A', 'A', 'A', 'A', 'A', 'A', 'G', 'A')
('A', 'A', 'A', 'A', 'A', 'A', 'A', 'G', 'A', 'G')
('A', 'A', 'A', 'A', 'A', 'A', 'G', 'A', 'G', 'T')
('A', 'A', 'A', 'A', 'A', 'G', 'A', 'G', 'T', 'G')
('A', 'A', 'A', 'A', 'G', 'A', 'G', 'T', 'G', 'T')
('A', 'A', 'A', 'G', 'A', 'G', 'T', 'G', 'T', 'C')
('A', 'A', 'G', 'A', 'G', 'T', 'G', 'T', 'C', 'T')
('A', 'G', 'A', 'G', 'T', 'G', 'T', 'C', 'T', 'G')
('G', 'A', 'G', 'T', 'G', 'T', 'C', 'T', 'G', 'A')
('A', 'G', 'T', 'G', 'T', 'C', 'T', 'G', 'A', 'T')
('G', 'T', 'G', 'T', 'C', 'T', 'G', 'A', 'T', 'A')
('T', 'G', 'T', 'C', 'T', 'G', 'A', 'T', 'A', 'G')
('G', 'T', 'C', 'T', 'G', 'A', 'T', 'A', 'G', 'C')
('T', 'C', 'T', 'G', 'A', 'T', 'A', 'G', 'C', 'A')
('C', 'T', 'G', 'A', 'T', 'A', 'G', 'C', 'A', 'G')
('T', 'G', 'A', 'T', 'A', 'G', 'C', 'A', 'G', 'C')
('G', 'A', 'T', 'A', 'G', 'C', 'A', 'G', 'C', 'T')
('A', 'T', 'A', 'G', 'C', 'A', 'G', 'C', 'T', 'T')
('T', 'A', 'G', 'C', 'A', 'G', 'C', 'T', 'T', 'C')
('A', 'G', 'C', 'A', 'G', 'C', 'T', 'T', 'C', 'T')
('G', 'C', 'A', 'G', 'C', 'T', 'T', 'C', 'T', 'G')
('C', 'A', 'G', 'C', 'T', 'T', 'C', 'T', 'G', 'A')
('A', 'G', 'C', 'T', 'T', 'C', 'T', 'G', 'A', 'A')
('G', 'C', 'T', 'T', 'C', 'T', 'G', 'A', 'A', 'C')
('C', 'T', 'T', 'C', 'T', 'G', 'A', 'A', 'C', 'T')
('T', 'T', 'C', 'T', 'G', 'A', 'A', 'C', 'T', 'G')
('T', 'C', 'T', 'G', 'A', 'A', 'C', 'T', 'G', 'G')
('C', 'T', 'G', 'A', 'A', 'C', 'T', 'G', 'G', 'T')
('T', 'G', 'A', 'A', 'C', 'T', 'G', 'G', 'T', 'T')
('G', 'A', 'A', 'C', 'T', 'G', 'G', 'T', 'T', 'A')
('A', 'A', 'C', 'T', 'G', 'G', 'T', 'T', 'A', 'C')
('A', 'C', 'T', 'G', 'G', 'T', 'T', 'A', 'C', 'C')
('C', 'T', 'G', 'G', 'T', 'T', 'A', 'C', 'C', 'T')
('T', 'G', 'G', 'T', 'T', 'A', 'C', 'C', 'T', 'G')
('G', 'G', 'T', 'T', 'A', 'C', 'C', 'T', 'G', 'C')
('G', 'T', 'T', 'A', 'C', 'C', 'T', 'G', 'C', 'C')
('T', 'T', 'A', 'C', 'C', 'T', 'G', 'C', 'C', 'G')
('T', 'A', 'C', 'C', 'T', 'G', 'C', 'C', 'G', 'T')
('A', 'C', 'C', 'T', 'G', 'C', 'C', 'G', 'T', 'G')
('C', 'C', 'T', 'G', 'C', 'C', 'G', 'T', 'G', 'A')
('C', 'T', 'G', 'C', 'C', 'G', 'T', 'G', 'A', 'G')
('T', 'G', 'C', 'C', 'G', 'T', 'G', 'A', 'G', 'T')
('G', 'C', 'C', 'G', 'T', 'G', 'A', 'G', 'T', 'A')
('C', 'C', 'G', 'T', 'G', 'A', 'G', 'T', 'A', 'A')
('C', 'G', 'T', 'G', 'A', 'G', 'T', 'A', 'A', 'A')
('G', 'T', 'G', 'A', 'G', 'T', 'A', 'A', 'A', 'T')

In [43]: for s in window(r.seq[:100], n=10):
    ...:     print("".join(s))
    ...:
AGCTTTTCAT
GCTTTTCATT
CTTTTCATTC
TTTTCATTCT
TTTCATTCTG
TTCATTCTGA
TCATTCTGAC
CATTCTGACT
ATTCTGACTG
TTCTGACTGC
TCTGACTGCA
CTGACTGCAA
TGACTGCAAC
GACTGCAACG
ACTGCAACGG
CTGCAACGGG
TGCAACGGGC
GCAACGGGCA
CAACGGGCAA
AACGGGCAAT
ACGGGCAATA
CGGGCAATAT
GGGCAATATG
GGCAATATGT
GCAATATGTC
CAATATGTCT
AATATGTCTC
ATATGTCTCT
TATGTCTCTG
ATGTCTCTGT
TGTCTCTGTG
GTCTCTGTGT
TCTCTGTGTG
CTCTGTGTGG
TCTGTGTGGA
CTGTGTGGAT
TGTGTGGATT
GTGTGGATTA
TGTGGATTAA
GTGGATTAAA
TGGATTAAAA
GGATTAAAAA
GATTAAAAAA
ATTAAAAAAA
TTAAAAAAAG
TAAAAAAAGA
AAAAAAAGAG
AAAAAAGAGT
AAAAAGAGTG
AAAAGAGTGT
AAAGAGTGTC
AAGAGTGTCT
AGAGTGTCTG
GAGTGTCTGA
AGTGTCTGAT
GTGTCTGATA
TGTCTGATAG
GTCTGATAGC
TCTGATAGCA
CTGATAGCAG
TGATAGCAGC
GATAGCAGCT
ATAGCAGCTT
TAGCAGCTTC
AGCAGCTTCT
GCAGCTTCTG
CAGCTTCTGA
AGCTTCTGAA
GCTTCTGAAC
CTTCTGAACT
TTCTGAACTG
TCTGAACTGG
CTGAACTGGT
TGAACTGGTT
GAACTGGTTA
AACTGGTTAC
ACTGGTTACC
CTGGTTACCT
TGGTTACCTG
GGTTACCTGC
GTTACCTGCC
TTACCTGCCG
TACCTGCCGT
ACCTGCCGTG
CCTGCCGTGA
CTGCCGTGAG
TGCCGTGAGT
GCCGTGAGTA
CCGTGAGTAA
CGTGAGTAAA
GTGAGTAAAT

In [44]: for s in tqdm(window(r.seq, n=10)):
    ...:     bloom.add("".join(s))
    ...:
4641643it [01:22, 55986.38it/s]

In [45]: bloom
Out[45]: BloomFilter(ideal_num_elements_n=10000, error_rate_p=0.100000, num_bits_m=47926)

In [46]: "TGCCGTGAGT" in bloom
Out[46]: True

In [47]: "TGCCGTGAGA" in bloom
Out[47]: True

In [48]: "TGCCGTGAGs" in bloom
Out[48]: True

In [49]: "TGCCGTGA" in bloom
Out[49]: True

In [50]: "7" in bloom
Out[50]: True

In [51]: bloom1 = BloomFilter()

In [52]: "f" in bloom
Out[52]: True

In [53]: "f" in bloom1
Out[53]: False

In [54]: (max_elements=1_000_000, error_rate=0.01)
  File "<ipython-input-54-fb950947b1a3>", line 1
    (max_elements=1_000_000, error_rate=0.01)
                 ^
SyntaxError: invalid syntax


In [55]: BloomFilter(max_elements=1_000_000, error_rate=0.01)
Out[55]: BloomFilter(ideal_num_elements_n=1000000, error_rate_p=0.010000, num_bits_m=9585059)

In [56]: bloom = BloomFilter(max_elements=1_000_000, error_rate=0.01)

In [57]: for s in tqdm(window(r.seq, n=10)):
    ...:     bloom.add("".join(s))
    ...:
4641643it [01:33, 49670.76it/s]

In [58]: "F" in bloom
Out[58]: False

In [59]: "GTGAGTAAAT" in bloom
Out[59]: True

In [60]: "GTGAGTAAAT1" in bloom
Out[60]: False

In [61]: "GTGAGTAAA" in bloom
Out[61]: False

In [62]: "GTGAGTAAAA" in bloom
Out[62]: True

In [63]: GTGAGTAAAA in r.seq
---------------------------------------------------------------------------
NameError                                 Traceback (most recent call last)
<ipython-input-63-6f22ee617ded> in <module>
----> 1 GTGAGTAAAA in r.seq

NameError: name 'GTGAGTAAAA' is not defined

In [64]: "GTGAGTAAAA" in r.seq
Out[64]: True

In [65]: "GTGAGTAAA" in r.seq
Out[65]: True

In [66]: "GTGAGTAAAaa" in r.seq
Out[66]: False

In [67]: "GTGAGTAAAA" in r.seq
Out[67]: True

In [68]: "GTGAGTAAAA" in r.seq
Out[68]: True

In [69]: "GTGAGTAAAA" in bloom
Out[69]: True

In [70]: "GTGAGTAAAAG" in bloom
Out[70]: False

In [71]: 4**10
Out[71]: 1048576

In [72]: 4**100
Out[72]: 1606938044258990275541962092341162602522202993782792835301376

In [73]: 4**30
Out[73]: 1152921504606846976

In [74]: BloomFilter(max_elements=1152921504606846976, error_rate=0.01)
python3.7(80246,0x10f13cdc0) malloc: can't allocate region
*** mach_vm_map(size=2762704981544734720) failed (error code=3)
python3.7(80246,0x10f13cdc0) malloc: *** set a breakpoint in malloc_error_break to debug
---------------------------------------------------------------------------
MemoryError                               Traceback (most recent call last)
<ipython-input-74-c57d51430ace> in <module>
----> 1 BloomFilter(max_elements=1152921504606846976, error_rate=0.01)

~/.pyenv/versions/3.7.2/lib/python3.7/site-packages/bloom_filter/bloom_filter.py in __init__(self, max_elements, error_rate, probe_bitnoer, filename, start_fresh)
    529
    530         if filename is None:
--> 531             self.backend = Array_backend(self.num_bits_m)
    532         elif isinstance(filename, tuple) and isinstance(filename[1], int):
    533             if start_fresh:

~/.pyenv/versions/3.7.2/lib/python3.7/site-packages/bloom_filter/bloom_filter.py in __init__(self, num_bits)
    390         self.num_bits = num_bits
    391         self.num_words = (self.num_bits + 31) // 32
--> 392         self.array_ = array.array('L', [0]) * self.num_words
    393
    394     def is_set(self, bitno):

MemoryError:

In [75]: ideal_num_elements_n = 4**30

In [76]:         numerator = -1 * self.ideal_num_elements_n * math.log(self.error_rate_p)
    ...:         denominator = math.log(2) ** 2
---------------------------------------------------------------------------
NameError                                 Traceback (most recent call last)
<ipython-input-76-6e625a46b8ef> in <module>
----> 1 numerator = -1 * self.ideal_num_elements_n * math.log(self.error_rate_p)
      2 denominator = math.log(2) ** 2

NameError: name 'self' is not defined

In [77]: import math

In [78]:         numerator = -1 * ideal_num_elements_n * math.log(self.error_rate_p)
    ...:         denominator = math.log(2) ** 2
---------------------------------------------------------------------------
NameError                                 Traceback (most recent call last)
<ipython-input-78-04c14f902ace> in <module>
----> 1 numerator = -1 * ideal_num_elements_n * math.log(self.error_rate_p)
      2 denominator = math.log(2) ** 2

NameError: name 'self' is not defined

In [79]:         numerator = -1 * ideal_num_elements_n * math.log(self.error_rate_p)
    ...:         denominator = math.log(2) ** 2
---------------------------------------------------------------------------
NameError                                 Traceback (most recent call last)
<ipython-input-79-04c14f902ace> in <module>
----> 1 numerator = -1 * ideal_num_elements_n * math.log(self.error_rate_p)
      2 denominator = math.log(2) ** 2

NameError: name 'self' is not defined

In [80]: error_rate_p=0.01

In [81]:         numerator = -1 * ideal_num_elements_n * math.log(error_rate_p)
    ...:         denominator = math.log(2) ** 2

In [82]: numerator / denominator
Out[82]: 1.105081992617893e+19

In [83]: print( 1.105081992617893e+19)
1.105081992617893e+19

In [84]: len(r.seq)
Out[84]: 4641652

In [85]: 2*len(r.seq) + len(r.seq)*(len(r.seq)-1)/2
Out[85]: 10772473607030.0

In [86]:         numerator = -1 * ideal_num_elements_n * math.log(self.error_rate_p)denominator = math.log(2) ** 2
  File "<ipython-input-86-0036e4321426>", line 1
    numerator = -1 * ideal_num_elements_n * math.log(self.error_rate_p)denominator = math.log(2) ** 2
                                                                                 ^
SyntaxError: invalid syntax


In [87]:         numerator = -1 * ideal_num_elements_n * math.log(error_rate_p)
    ...:         denominator = math.log(2) ** 2

In [88]: def num_of_bits(ideal_num_elements_n):
    ...:     numerator = -1 * ideal_num_elements_n * math.log(error_rate_p)
    ...:

In [89]: def num_of_bits(ideal_num_elements_n):
    ...:     numerator = -1 * ideal_num_elements_n * math.log(error_rate_p)
    ...:     denominator = math.log(2) ** 2
    ...:     return numerator / denominator
    ...:

In [90]: for i in range(1,30):
    ...:     print(i, num_of_bits(4**i)<10772473607030)
    ...:
1 True
2 True
3 True
4 True
5 True
6 True
7 True
8 True
9 True
10 True
11 True
12 True
13 True
14 True
15 True
16 True
17 True
18 True
19 True
20 True
21 False
22 False
23 False
24 False
25 False
26 False
27 False
28 False
29 False

In [91]: num_of_bits(4**20)
Out[91]: 10538883138827.258

In [92]: 10772473607030
Out[92]: 10772473607030

In [93]: for i in range(1,30):
    ...:     print(i, num_of_bits(4**i)<10772473607030/2)
    ...:
1 True
2 True
3 True
4 True
5 True
6 True
7 True
8 True
9 True
10 True
11 True
12 True
13 True
14 True
15 True
16 True
17 True
18 True
19 True
20 False
21 False
22 False
23 False
24 False
25 False
26 False
27 False
28 False
29 False

In [94]:
